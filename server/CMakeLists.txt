# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS cmake.toml)
endif()

project(server)

# Target: server
set(CMKR_TARGET server)
include(FetchContent)
FetchContent_Declare(
    spdlog
    GIT_REPOSITORY https://github.com/gabime/spdlog.git
    GIT_TAG        v1.15.3
)

# Make the spdlog target available
FetchContent_MakeAvailable(spdlog)

set(server_SOURCES
	cmake.toml
	"inc/cargs.h"
	"inc/cli.hpp"
	"inc/eflags.hpp"
	"inc/enet.h"
	"inc/exec.hpp"
	"inc/init.hpp"
	"inc/server.hpp"
	"inc/tether.hpp"
	"src/cargs.c"
	"src/cli.cpp"
	"src/init.cpp"
	"src/main.cpp"
	"src/server.cpp"
)

add_executable(server)

target_sources(server PRIVATE ${server_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${server_SOURCES})

target_compile_features(server PRIVATE
	cxx_std_20
)

target_include_directories(server PRIVATE
	inc
)

target_link_libraries(server PRIVATE
	monocypher
	spdlog
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT server)
endif()
